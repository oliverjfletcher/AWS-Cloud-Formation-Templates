AWSTemplateFormatVersion: '2010-09-09'
#Define RDS parameters to be used to configure PHP for WP
Parameters:
  DBName:
    Default: wordpressdb
    Description: The WordPress database name
    Type: String
    MinLength: '1'
    MaxLength: '64'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
  DBUser:
    NoEcho: 'true'
    Description: The WordPress database admin account username
    Type: String
    MinLength: '1'
    MaxLength: '16'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
  DBPassword:
    NoEcho: 'true'
    Description: The WordPress database admin account password
    Type: String
    MinLength: '8'
    MaxLength: '41'
    AllowedPattern: '[a-zA-Z0-9]*'
    ConstraintDescription: must contain only alphanumeric characters.   
Description: >
    This template deploys ECS Cluster and defines ECS Service, Task Defintion, Auto Scaling and a ELB    
Resources:
#Create ECS Cluster
    ECSCluster:
        Type: AWS::ECS::Cluster
        Properties:
            ClusterName: AUSYDECSCLUS000
#Create ECS Service Definition 
    ECSService:
        Type: AWS::ECS::Service
        Properties:
          Cluster: Ref! ECSCluster
          DesiredCount: 4
          Deployment Cofiguration:
            Maximum Percent: 100
            MinimumHealthyPercent: 50
          LoadBalancers:
              ContainerName: Wordpress
              ContainerPort: 80
              LoadBalancerName: 
                Fn::ImportValue: ApplicationLoadBalancerId
          Role: 
            Fn::ImportValue: IAM-EC2-ECS-Service-CF
          Task Defintion: !Ref ECSTaskDefinition
#Create ECS Task Defintion
    ECSTaskDefinition:
        Type: AWS::ECS::TaskDefinition
        Properties:
          ContainerDefinitions:
            Name: Wordpress
            Essential: True
            Image: !Join [ ".", [ !Ref "AWS::AccountId", "dkr.ecr", !Ref "AWS::Region", !Join [ "/", [ "amazonaws.com", !Ref ECRName, :WordpressBuild000 ] ] ] ]
            PortMappings:
              HostPort: 0
              ContainerPort: 80
              HostPort: 0
              ContainerPort: 443
          Volumes:
            Name: ECSVolume000
#Create Auto Scaling Group for ECS Cluster
    ECSAutoScalingGroup:
        Type: AWS::AutoScaling::AutoScalingGroup
        Properties:
          VPCZoneIdentifier: [ Fn::ImportValue: AppTierSubnet0Id, Fn::ImportValue: AppTierSubnet1Id ]
          LaunchConfigurationName: !Ref ContainerInstances
          MinSize: 4
          MaxSize: 8
          DesiredCapacity: 4
#Create creation policy for Auto Scaling Group
        CreationPolicy:
          ResourceSignal:
            Count: 3
            Timeout: PT10M
          AutoScalingCreationPolicy:
            MinSuccessfulInstancesPercent: 2
#Create update policy for Auto Scaling Group
        UpdatePolicy:
          AutoScalingRollingUpdate:
            MinInstancesInservice: 1
            MaxBatchSize: 4
            PauseTime: PT10M
            WaitOnResourceSignals: true
#Create Auto Scaling Launch Configuration
    ContainerInstances:
        Type: AWS::AutoScaling::LaunchConfiguration
        Metadata:
          AWS::CloudFormation::Init:
            config:
              commands:
                01_add_instance_to_cluster: 
                  command: !Join ["",[ "#!/bin/bash\n" , echo ECS_CLUSTER= , !Ref EcsCluster , >> /etc/ecs/ecs.config ]]
              files:
                /etc/cfn/cfn-hup.conf:
                  content: !Join ["", [[main], "\n", stack=, !Ref AWS::StackId, "\n", region=, !Ref AWS::Region, "\n"]] 
                  mode: 000400
                  owner: root
                  group: root
                /etc/cfn/hooks.d/cfn-auto-reloader.conf:
                  content: !Join ["", [ , "[cfn-auto-reloader-hook]\n", "triggers=post.update\n", "path=Resources.ContainerInstances.Metadata.AWS::CloudFormation::Init\n", "action=/opt/aws/bin/cfn-init -v", --stack, !Ref AWS::StackName, --resource ContainerInstances, --region, !Ref AWS::Region, "\n", "runas=root\n"]]
                /tmp/create-wp-config:
                  content: !Join 
                    - ''
                    - - |
                        #!/bin/bash
                      - >
                        cp /var/www/html/wordpress/wp-config-sample.php
                        /var/www/html/wordpress/wp-config.php
                        - sed -i "s/'database_name_here'/'
                      - !Ref DBName
                      - |
                        '/g" wp-config.php
                      - sed -i "s/'username_here'/'
                      - !Ref DBUser
                      - |
                        '/g" wp-config.php
                      - sed -i "s/'password_here'/'
                      - !Ref DBPassword
                      - |
                        '/g" wp-config.php
                      - sed -i "s/'localhost'/'
                      - !GetAtt 
                        - DBInstance
                        - Endpoint.Address
                      - |
                        '/g" wp-config.php
                  mode: '000500'
                  owner: root
                  group: root
                  commands:
                  01_configure_wordpress:
                  command: /tmp/create-wp-config
                  cwd: /var/www/html/wordpress