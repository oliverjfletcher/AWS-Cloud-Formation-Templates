AWSTemplateFormatVersion: '2010-09-09'
#Define RDS parameters to be used to configure PHP for WP
Parameters:
  WPAdminUser:
    NoEcho: 'true'
    Description: The WordPress admin username
    Type: String
    MinLength: '1'
    MaxLength: '16'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
  WPAdminPassword:
    NoEcho: 'true'
    Description: The WordPress admin password
    Type: String
    MinLength: '8'
    MaxLength: '41'
    AllowedPattern: '[a-zA-Z0-9]*'
    ConstraintDescription: must contain only alphanumeric characters.   
  DBUser:
    NoEcho: 'true'
    Description: The WordPress database admin account username
    Type: String
    MinLength: '1'
    MaxLength: '16'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
  DBPassword:
    NoEcho: 'true'
    Description: The WordPress database admin account password
    Type: String
    MinLength: '8'
    MaxLength: '41'
    AllowedPattern: '[a-zA-Z0-9]*'
    ConstraintDescription: must contain only alphanumeric characters.   
Description: >
    This template deploys ECS Cluster and defines ECS Service, Task Defintion, Auto Scaling and a ELB    
Resources:
#Create ECS Cluster
    ECSCluster:
        Type: AWS::ECS::Cluster
        Properties:
            ClusterName: AUSYDECSCLUS000
#Create ECS Service Definition 
    ECSService:
        Type: AWS::ECS::Service
        Properties:
          Cluster: Ref! ECSCluster
          DesiredCount: 2
          Deployment Cofiguration:
            Maximum Percent: 100
            MinimumHealthyPercent: 50
          LoadBalancers:
              ContainerName: Wordpress
              ContainerPort: 80
              LoadBalancerName:
                Fn::ImportValue: Application-LoadBalancer-Id
          Role: 
            - Fn::ImportValue: IAM-EC2-ECS-Service-CF
          Task Defintion: !Ref ECSTaskDefinition
#Create ECS Task Defintion
    ECSTaskDefinition:
        Type: AWS::ECS::TaskDefinition
        Properties:
          ContainerDefinitions:
            Name: Wordpress
            Essential: True
            Image: !Join [":",[ !ImportValue "ECRURI", "WordpressBuild000" ]]
            PortMappings:
              HostPort: "80"
              ContainerPort: "80"
              HostPort: "443"
              ContainerPort: "443"
            TaskRoleArn:
              Fn::ImportValue: IAM-EC2-ECS-Task-ARN
          Volumes:
            Name: ECSVolume000
#Create Auto Scaling Group for ECS Cluster
    ECSAutoScalingGroup:
        Type: AWS::AutoScaling::AutoScalingGroup
        Properties:
          VPCZoneIdentifier: 
            - Fn::ImportValue: App-Tier-Subnet-0-ID
            - Fn::ImportValue: App-Tier-Subnet-1-ID
          LaunchConfigurationName: !Ref ContainerInstances
          MinSize: 2
          MaxSize: 8
          DesiredCapacity: 2
#Create creation policy for Auto Scaling Group
        CreationPolicy:
          ResourceSignal:
            Count: 3
            Timeout: PT10M
          AutoScalingCreationPolicy:
            MinSuccessfulInstancesPercent: 2
#Create update policy for Auto Scaling Group
        UpdatePolicy:
          AutoScalingRollingUpdate:
            MinInstancesInservice: 1
            MaxBatchSize: 2
            PauseTime: PT10M
            WaitOnResourceSignals: true
#Create Auto Scaling Launch Configuration
    ContainerInstances:
        Type: AWS::AutoScaling::LaunchConfiguration
        Metadata:
          AWS::CloudFormation::Init:
            config:
              commands:
                01_add_instance_to_cluster: 
                  command: !Join ["",[ "#!/bin/bash\n" , "echo ECS_CLUSTER=", !Ref "EcsCluster", ">> /etc/ecs/ecs.config" ]]
                install_wp:
                  command: wp core config --dbname="test" --dbuser="root" --dbpass="Password1!" --dbhost="testhost.com" --dbprefix="wp_" --allow-root
                configure_wp:
                  command: wp core install --url="www.oliverjfletcher.net" --title="Oliver James Fletcher" --admin_user='" !Ref WPAdminUsername "' --admin_password='" !Ref WPAdminUsername "' --admin_email="oliverjfletcher-wp@mailinator.com" --skip-email --allow-root\n"
              files:
                /etc/cfn/cfn-hup.conf:
                  content: !Join ["", ["[[main]\n", "stack=", !Ref "AWS::StackId", "\n", "region=", !Ref "AWS::Region", "\n"]] 
                  mode: 000400
                  owner: root
                  group: root
                /etc/cfn/hooks.d/cfn-auto-reloader.conf:
                  content: !Join ["", ["[cfn-auto-reloader-hook]\n", "triggers=post.update\n", "path=Resources.ContainerInstances.Metadata.AWS::CloudFormation::Init\n", "action=/opt/aws/bin/cfn-init -v", "--stack", !Ref "AWS::StackName", "--resource ContainerInstances", "--region", !Ref "AWS::Region", "\n", "runas=root\n"]]